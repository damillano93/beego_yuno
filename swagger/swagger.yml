swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /countries/:
    get:
      tags:
      - countries
      description: get Countries
      operationId: CountriesController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Countries'
        "403":
          description: ""
    post:
      tags:
      - countries
      description: create Countries
      operationId: CountriesController.Post
      parameters:
      - in: body
        name: body
        description: body for Countries content
        required: true
        schema:
          $ref: '#/definitions/models.Countries'
      responses:
        "201":
          description: '{int} models.Countries'
        "403":
          description: body is empty
  /countries/{id}:
    get:
      tags:
      - countries
      description: get Countries by id
      operationId: CountriesController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Countries'
        "403":
          description: :id is empty
    put:
      tags:
      - countries
      description: update the Countries
      operationId: CountriesController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Countries content
        required: true
        schema:
          $ref: '#/definitions/models.Countries'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Countries'
        "403":
          description: :id is not int
    delete:
      tags:
      - countries
      description: delete the Countries
      operationId: CountriesController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /students/:
    get:
      tags:
      - students
      description: get Students
      operationId: StudentsController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Students'
        "403":
          description: ""
    post:
      tags:
      - students
      description: create Students
      operationId: StudentsController.Post
      parameters:
      - in: body
        name: body
        description: body for Students content
        required: true
        schema:
          $ref: '#/definitions/models.Students'
      responses:
        "201":
          description: '{int} models.Students'
        "403":
          description: body is empty
  /students/{id}:
    get:
      tags:
      - students
      description: get Students by id
      operationId: StudentsController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Students'
        "403":
          description: :id is empty
    put:
      tags:
      - students
      description: update the Students
      operationId: StudentsController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Students content
        required: true
        schema:
          $ref: '#/definitions/models.Students'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Students'
        "403":
          description: :id is not int
    delete:
      tags:
      - students
      description: delete the Students
      operationId: StudentsController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  models.Countries:
    title: Countries
    type: object
    properties:
      created_at:
        type: string
        format: datetime
      deleted_at:
        type: string
        format: datetime
      id:
        type: integer
        format: int64
      iso_name:
        type: string
      name:
        type: string
      updated_at:
        type: string
        format: datetime
  models.Students:
    title: Students
    type: object
    properties:
      born_date:
        type: string
        format: datetime
      country_id:
        $ref: '#/definitions/models.Countries'
      created_at:
        type: string
        format: datetime
      deleted_at:
        type: string
        format: datetime
      first_name:
        type: string
      id:
        type: integer
        format: int64
      last_name:
        type: string
      updated_at:
        type: string
        format: datetime
tags:
- name: countries
  description: |
    CountriesController operations for Countries
- name: students
  description: |
    StudentsController operations for Students
